board = [["7",".",".",".","4",".",".",".","."],[".",".",".","8","6","5",".",".","."],[".","1",".","2",".",".",".",".","."],[".",".",".",".",".","9",".",".","."],[".",".",".",".","5",".","5",".","."],[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".","2",".","."],[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."]]
from typing import List
from collections import defaultdict
def isValidSudoku(board: List[List[str]]) -> bool:
    # row checker
    for row in range(0,9):
        d = defaultdict(int)
        print(board[row])
        
        for i in board[row]:
            d[i] += 1
        d.pop(".")
        for k in d:
            # print(d[k],"final")
            if d[k] >= 2:
                # return False
                pass            
    # column checker
    for i in range(0,9):
        d = defaultdict(int)
        for row in board:
            # print(row)
            # if row[i] in [str(j) for j in range(1,10)]:
            d[row[i]] += 1
        d.pop('.')
        for i in d:
            if d[i] >= 2:
                return False
    print("h")
    # box checker
    for row in range(0,9,3):
        for col in range(0,9,3):
            # print(row,col)
            d = defaultdict(int)
            
            d[board[row][col]] += 1 
            d[board[row][col+1]] += 1
            d[board[row][col+2]] += 1

            d[board[row+1][col]] += 1
            d[board[row+1][col+1]] += 1
            d[board[row+1][col+2]] += 1


            d[board[row+2][col]]+=1 
            d[board[row+2][col+1]] += 1
            d[board[row+2][col+2]] += 1

            d.pop(".")
            # print(d)
            for k in d:
                if d[k] >= 2:
                    return False
    return True

    # box checker
print(isValidSudoku(board) )   
    
            